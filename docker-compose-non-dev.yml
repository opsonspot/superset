#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image woodfrog-superset:latest
x-superset-depends-on: &superset-depends-on
  - database
  - redis
x-superset-volumes:
  &superset-volumes # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  - superset_home:/app/superset_home
  - ./:/app

version: "3.7"
services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - superset
      - api
  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data
  dash:
    build:
      context: .
      dockerfile: Dockerfile.dash
    restart: unless-stopped
    ports:
      - "5000:5000"

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      host: superset_database
      user: woodfrog
      password: preciseV5
      database: master
    restart: unless-stopped
    depends_on:
      - database

  database:
    build:
      context: .
      dockerfile: Dockerfile.database
    container_name: superset_database
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - superset_database_data1:/var/lib/mysql
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  superset:
    env_file: docker/.env-non-dev
    build: # Add a build configuration for superset-worker
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    #image: *superset-image
    container_name: superset_app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 8080:8088
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    depends_on: *superset-depends-on
    volumes:
      - ./docker:/app/docker
      - superset_home:/app/superset_home
      - ./:/app
      - ./superset_config.py:/app/superset_config.py
    # environment:
    #   - SUPERSET_CONFIG_PATH=/app/superset_config.py


  superset-init:
    build: # Add a build configuration for superset-worker
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    #image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

  superset-worker:
    build: # Add a build configuration for superset-worker
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    #image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
        ]

  superset-worker-beat:
    #image: *superset-image
    container_name: superset_worker_beat
    build: # Add a build configuration for superset-worker
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

volumes:
  superset_home:
    external: false
  superset_database_data1:
  redis:
    external: false
