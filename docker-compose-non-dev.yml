version: "3.7"

x-superset-image: &superset-image woodfrog-superset:latest
x-superset-depends-on: &superset-depends-on
  - database
  - redis
x-superset-volumes: &superset-volumes
  - ./docker:/app/docker
  - superset_home:/app/superset_home
  - ./:/app

services:
  caddy:
    image: caddy
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    depends_on:
      - superset
    networks:
      - superset_network

  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data
    networks:
      - superset_network

  database:
    build:
      context: .
      dockerfile: Dockerfile.database
    container_name: superset_database
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - superset_database_data1:/var/lib/mysql
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - superset_network

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      host: superset_database
      user: woodfrog
      password: preciseV5
      database: master
    restart: unless-stopped
    depends_on:
      - database
    networks:
      - superset_network

  dash:
    build:
      context: .
      dockerfile: Dockerfile.dash
    restart: unless-stopped
    ports:
      - "5000:5000"
    networks:
      - superset_network

  superset:
    env_file: docker/.env-non-dev
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    container_name: superset_app
    ports:
      - "8080:8088"
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    networks:
      - superset_network

  superset-init:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - superset_network
    healthcheck:
      disable: true

  superset-worker:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - superset_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
        ]

  superset-worker-beat:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - superset_network
    healthcheck:
      disable: true

volumes:
  superset_home:
    external: false
  superset_database_data1:
  redis:
    external: false

networks:
  superset_network:
    driver: bridge
